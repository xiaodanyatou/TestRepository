<view>
  {{ m1.toUpper(username)}}
</view>
<view>
  {{ m2.toLower(firstname)}}
</view>
<!-- 内嵌的形式使用WXS 必须通过module属性指定模块名称，方便在wxml中访问模块 -->
<wxs module="m1">
  module.exports.toUpper = function(str) {
    return str.toUpperCase()
  }
</wxs>
<!-- 外联WXS 必须通过module属性指定模块名称，src用来指定要引入的脚本路径，且必须是相对路径 -->
<wxs module="m2" src="../../utils/tools.wxs"></wxs>
<view>-------------fengexian----------</view>
<view>父组件中的count：{{count}}</view>
<button bindtap="getChild">获取子组件的实例对象</button>
<view>
<!-- 自定义事件的形式将方法传递给子组件 -->
  <my-test3 count="{{count}}" bind:sync="syncCount" class="customA" id="cA"></my-test3>
</view>
<view>-------------fengexian----------</view>
<!-- test4 自定义组件-单个插槽用法-->
<my-test4>
  <!-- 1、单个插槽填充的写法 -->
  <!-- <view>这是通过插槽填充的</view> -->

  <!-- 2、多个插槽填充的写法，给节点添加slot属性，指定要填充的插槽的名字即可 -->
  <view slot="before">这是填充到 before 里面的内容</view>
  <view slot="after">这是填充到 after 里面的内容</view>
</my-test4>

<view>---------共享数据 store 部分 start ---------</view>
<view>
  {{ numA }} + {{ numB }} = {{ sum }}
</view>
<van-button type="primary" bindtap="btnHandler1" data-step="{{1}}">numA + 1</van-button>
<van-button type="danger" bindtap="btnHandler1" data-step="{{-1}}">numA - 1</van-button>
<van-button type="primary" bindtap="btnHandler2" data-step="{{1}}">numB + 1</van-button>
<van-button type="danger" bindtap="btnHandler2" data-step="{{-1}}">numB - 1</van-button>

<view>---------共享数据 store 部分 end ---------</view>
<my-numbers></my-numbers>
